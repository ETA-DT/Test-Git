#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

############################################################
# -- BTA -- Copie du cube source A vers le cube cible B des quantités
# -- Auteur : BTA
# -- Date : 10/11/2022 
# -- Modification : 
############################################################

############################################################
# -- Déclaration des variables
vCubeSource = 'Source_A' ; 
vCubeCible = 'Cible_LSA_Mois' ;
vViewNameSource = 'BTA_Source' ;
vViewNamePurge = 'BTA_Purge' ; 

vSubsetNameSource = 'BTA_Subset_Source' ; 
vSubsetNamePurge = 'BTA_Subset_Purge' ;
vDim = 'Sales_Plan_Measures' ; 

############################################################
# -- Vue Source 

# -- Créer la vue source 
ViewDestroy( vCubeSource , vViewNameSource );
ViewCreate( vCubeSource , vViewNameSource , 1 ); 

# -- Création de sous ensemble
SubsetDestroy( vDim , vSubsetNameSource ) ; 
SubsetCreate( vDim , vSubsetNameSource , 1 ) ; 
SubsetElementInsert( vDim , vSubsetNameSource , 'Quantity' , 1 ); 
ViewSubsetAssign( vCubeSource , vViewNameSource , vDim , vSubsetNameSource );

# -- Paramètres supplémentaires de la vue source 
ViewExtractSkipZeroesSet ( vCubeSource , vViewNameSource , 1 ); 
ViewExtractSkipCalcsSet(  vCubeSource , vViewNameSource , 1 ); 
ViewExtractSkipRuleValuesSet ( vCubeSource , vViewNameSource , 1 ); 

# -- Source Name Dynamic
DataSourceType = 'View';
DataSourceCubeView = vViewNameSource ;

############################################################
# -- Vue de purge

# -- Créer la vue de purge
ViewDestroy( vCubeCible , vViewNamePurge );
ViewCreate( vCubeCible , vViewNamePurge , 1 ); 

# -- Création de sous ensemble
SubsetDestroy( vDim , vSubsetNamePurge ) ; 
SubsetCreate( vDim , vSubsetNamePurge , 1 ) ; 
SubsetElementInsert( vDim , vSubsetNamePurge , 'Quantity' , 1 ); 
ViewSubsetAssign( vCubeCible , vViewNamePurge , vDim , vSubsetNamePurge );

ViewZeroOut( vCubeCible , vViewNamePurge );



#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

# -- Boucle 
i = 1 ;  
iMax = DimSiz( 'Months' ); 

While( i <= iMax );

	vElem = DIMNM( 'Months' , i ) ; 

	IF( ELLEV( 'MONTHS' , vElem ) = 0 ); 
		TextOutput( GetProcessName() | '.txt' , vCubeCible , Product , Sales_Plan_Measures , NumberToString( Valeur ) , NumberToString( i ) , vElem );

		# -- Copie la valeur dans le cube cible
		CellPutN( Valeur / 12, vCubeCible , Product , vElem , Sales_Plan_Measures );

	ENDIF;

	i = i + 1; 
End;
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion