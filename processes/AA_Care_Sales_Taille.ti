#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****


##############################################
#Processus permetant de copier des données d'un cube "Cible_YGH" à "Cible_YGH"
#Yasmine GHAEM, Le 10/11/2022
#MODIF


##############################################
##Déclaration Des Variables
vCubeSource= 'Source_LSA';
vCubeCible= 'Cible_LSA_Taille';
vViewNameSource='Vue_Taille';
vViewNamePurge='YGH_Purge';

vSubsetNameSource = 'YGH_Subset_Source' ; 
vSubsetNamePurge = 'YGH_Subset_Purge' ;
vDim = 'Sales_Plan_Measures' ;




############################################################
# -- Vue Source 

# -- Créer la vue source 
ViewDestroy( vCubeSource , vViewNameSource );
ViewCreate( vCubeSource , vViewNameSource , 1 ); 

# -- Création de sous ensemble
SubsetDestroy( vDim , vSubsetNameSource ) ; 
SubsetCreate( vDim , vSubsetNameSource , 1 ) ; 
SubsetElementInsert( vDim , vSubsetNameSource , 'Quantity' , 1 ); 

ViewSubsetAssign( vCubeSource , vViewNameSource , vDim , vSubsetNameSource );



# -- Paramètres supplémentaires de la vue source 
ViewExtractSkipZeroesSet ( vCubeSource , vViewNameSource , 1 ); 
ViewExtractSkipCalcsSet(  vCubeSource , vViewNameSource , 1 ); 
ViewExtractSkipRuleValuesSet ( vCubeSource , vViewNameSource , 1 ); 

# -- Source Name Dynamic
DataSourceType = 'View';
DataSourceCubeView = vViewNameSource ;

############################################################
# -- Vue de purge

# -- Créer la vue de purge
ViewDestroy( vCubeCible , vViewNamePurge );
ViewCreate( vCubeCible , vViewNamePurge , 1 ); 

# -- Création de sous ensemble
SubsetDestroy( vDim , vSubsetNamePurge ) ; 
SubsetCreate( vDim , vSubsetNamePurge , 1 ) ; 
SubsetElementInsert( vDim , vSubsetNamePurge , 'Quantity' , 1 ); 
ViewSubsetAssign( vCubeCible , vViewNamePurge , vDim , vSubsetNamePurge );

ViewZeroOut( vCubeCible , vViewNamePurge );
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****



vDim_Taille='Taille';

i=1;
iMax= DimSiz(vDim_Taille);

While (i<=iMax);
       vELMN=DimNM( vDim_Taille, i );
       If (Ellev( vDim_Taille,  vELMN  )=0  );
            CellPutN( Valeur / 5, vCubeCible, Product, vELMN, Sales_Plan_Measures);

      endif;
       i=i+1;
End;




#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion